--------------------------------------------------------------------------------
	 ██████╗██╗   ██╗██████╗ ███████╗██████╗  ██████╗ ██████╗ ███████╗
	██╔════╝╚██╗ ██╔╝██╔══██╗██╔════╝██╔══██╗██╔═══██╗██╔══██╗██╔════╝
	██║      ╚████╔╝ ██████╔╝█████╗  ██████╔╝██║   ██║██████╔╝███████╗
	██║       ╚██╔╝  ██╔══██╗██╔══╝  ██╔══██╗██║   ██║██╔═══╝ ╚════██║
	╚██████╗   ██║   ██████╔╝███████╗██║  ██║╚██████╔╝██║     ███████║
	 ╚═════╝   ╚═╝   ╚═════╝ ╚══════╝╚═╝  ╚═╝ ╚═════╝ ╚═╝     ╚══════╝

------------------ Análisis, detección y respuesta de Malware ------------------                                                                  

## # # # # # # # # # #  # # # # # # # # # # # # # # # # # # # # # # # # # # # ##  
# >EDGAR SALAZAR <edgar.salazar@guayoyo.io>                            		#
# >JOSMELL CHAVARRI <josmell.chavarri@guayoyo.io>                     		#
# --------------------------     GUAYOYO    --------------------------------- ##
################################################################################


POC 01 - Monitoreo de integridad de archivos  (atributos: realtime / Whodata)



Ubicar el directorio Lab1 en el agente

# cd /home/Lab1


Crear el directorio a monitorear 

# mkdir training


Abrir el archivo de configuraciòn del agente 

# vi /var/ossec/etc/ossec.conf


Ubicar la variable 

<!-- File integrity monitoring -->
  <syscheck>
    <disabled>no</disabled>

    <!-- Frequency that syscheck is executed default every 12 hours -->
    <frequency>43200</frequency>

    <scan_on_start>yes</scan_on_start>

    <!-- Directories to check  (perform all possible verifications) -->
    <directories>/etc,/usr/bin,/usr/sbin</directories>
    <directories>/bin,/sbin,/boot</directories>




Agregar el directorio a monitorear en tiempo real y whodata


    <directories check_all="yes" realtime="yes">/home/Lab1/training</directories>
    <directories check_all="yes" realtime="yes">/tmp</directories>
    <directories check_all="yes" whodata="yes">/etc</directories>



Guardar los cambios y reininicar el servicio 

# systemctl restart wazuh-agent


Crear el archivo de prueba dentro del directorio training 

# touch test.txt


Verificar las alertas en el dashboard 

::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::



POC 02 - Monitoreo de integridad de archivos  (atributo: recursion)


Abrir el archivo de configuraciòn del agente 

# vi /var/ossec/etc/ossec.conf


Agregar el atributo recursion al directorio  monitoreado 


<directories check_all="yes" realtime="yes" recursion_level="3">/home/Lab1/training</directories>

Guardar los cambios y reininicar el servicio 

# systemctl restart wazuh-agent


::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::


POC 03 - Detección de binarios sospechosos 


Abrir el archivo de configuraciòn del agente 

# vi /var/ossec/etc/ossec.conf


Ubicar la variable y verificar que no este deshabilitado el rootchek

<rootcheck>
    <disabled>no</disabled>
    <check_files>yes</check_files>


Hacer el cambio si es necesario 


Ejecutar el comando w

# w
 
Cree una copia del  binario original.
# cp -p /usr/bin/w /usr/bin/w.copy


Reemplace el binario original /usr/bin/w  con el siguiente script de shell.
vi w --->  borrar el contenido  y pegar lo siguiente: 

#!/bin/bash
echo "`date` this is evil"   > /tmp/trojan_created_file
echo 'test for /usr/bin/w trojaned file' >> /tmp/trojan_created_file



Reiniciar el agente wazuh 

# systemctl restart wazuh-agent

:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

POC 04 - Detecciòn de archivos maliciosos usando lista CDB 


En el server manager: 
Crear el archivo con la lista de hashes de malware 
 
touch /var/ossec/etc/lists/malware-hashes  

Copiar los datos del repositorio   malware-hashes  https://github.com/GuayoyoCyber/CyberOps-Malware-Training/blob/main/lab3/malware-hashes
Guardar los datos


Abrir el archivo de configuraciòn ossec.conf

vi /var/ossec/etc/ossec.conf

Ubicar la variable 
<ruleset>

Dentro de ese bloque <ruleset> colocar la ruta de la lista de hashes <list>etc/lists/malware-hashes</list>  deberìa quedas algo como esto:

 <ruleset>
    <!-- Default ruleset -->
    <decoder_dir>ruleset/decoders</decoder_dir>
    <rule_dir>ruleset/rules</rule_dir>
    <rule_exclude>0215-policy_rules.xml</rule_exclude>
    <list>etc/lists/audit-keys</list>
    <list>etc/lists/amazon/aws-eventnames</list>
    <list>etc/lists/security-eventchannel</list>

     <list>etc/lists/malware-hashes</list>


    <!-- User-defined ruleset -->
    <decoder_dir>etc/decoders</decoder_dir>
    <rule_dir>etc/rules</rule_dir>
  </ruleset>



Crear una regla personalizada en /var/ossec/etc/rules/local_rules.xml para alertar cuando el hash de un archivo descargado, se encuentra en la lista negra de malware


Abrir el archivo /var/ossec/etc/rules/local_rules.xml, copiar y  pegar las siguientes reglas 


<group name="local,malware,">
  <rule id="100002" level="5">
    <if_sid>554</if_sid>
    <list field="md5" lookup="match_key">etc/lists/malware-hashes</list>
    <description>A file - $(file) - in the malware blacklist was added to the system.</description>
  </rule>


  <rule id="100003" level="5">
    <if_sid>100002</if_sid>
    <field name="file" type="pcre2">(?i)[c-z]:</field>
    <description>A file - $(file) - in the malware blacklist was added to the system.</description>
  </rule>
</group>



Reiniciar el servicio 

systemctl restart wazuh-manager



En el agente:


Descargar un archivo malicioso en el directorio /training

# curl -LO http://www.eicar.org/download/eicar.com && ls -lah eicar.com


Verificar dashboard 

:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

POC 05 - Escaneos de archivos con virustotal 


Crear una cuenta en virustotal
https://www.virustotal.com/


En la secciòn de la cuenta del usuario se encuentra el API Key 


Agregar esta configuración en el archivo ossec.conf del servidor manager 
# vi /var/ossec/etc/ossec.conf


<integration>
  <name>virustotal</name>
  <api_key>API_KEY</api_key> <!-- Replace with your VirusTotal API key -->
  <group>syscheck</group>
  <alert_format>json</alert_format>
</integration>



Reiniciar el servicio de server manager 

 #  systemctl restart wazuh-manager


En el agente: 

Crear un archivo en el directorio /tmp
# touch test_virustotal.txt


Verificar el dashboard 


Descargar un archivo malicioso en el directorio /tmp 

# curl -LO http://www.eicar.org/download/eicar.com && ls -lah eicar.com

Verificar el dashboard 

::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::


POC 06 - Creaciòn de reglas y decoders


En el server:

Abrir el archivo local_decoder.xml

vi /var/ossec/etc/decoders/local_decoder.xml


Agregar el siguiente decoder 


<decoder name="training">
  <program_name>^training</program_name>
</decoder>

<decoder name="training">
  <parent>training</parent>
  <regex>User '(\w+)' logged from '(\d+.\d+.\d+.\d+)'</regex>
  <order>user, srcip</order>
</decoder>


Abrir el archivo local_rules.xml

vi /var/ossec/etc/rules/local_rules.xml


<group name="local,access,">
<rule id="100004" level="10">
  <program_name>training</program_name>
  <description>User logged</description>
</rule>
</group>



Reiniciar el servicio de wazuh  manager 
systemctl restart wazuh-manager


Comprobar el funcionamiento de la regla con /var/ossec/bin/wazuh-logtest

/var/ossec/bin/wazuh-logtest

Pegar el ejemplo de registro 

Jul 12 10:45:07 host-cyberbootcamp training[2022]: User 'admin' logged from '192.168.1.100'






